<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clf.meetingfilm.backendfilm.dao.MoocFilmTDao">
  <resultMap id="BaseResultMap" type="com.clf.meetingfilm.backendfilm.model.MoocFilmT">
    <id column="UUID" jdbcType="INTEGER" property="uuid" />
    <result column="film_name" jdbcType="VARCHAR" property="filmName" />
    <result column="film_type" jdbcType="INTEGER" property="filmType" />
    <result column="img_address" jdbcType="VARCHAR" property="imgAddress" />
    <result column="film_score" jdbcType="VARCHAR" property="filmScore" />
    <result column="film_preSaleNum" jdbcType="INTEGER" property="filmPresalenum" />
    <result column="film_box_office" jdbcType="INTEGER" property="filmBoxOffice" />
    <result column="film_source" jdbcType="INTEGER" property="filmSource" />
    <result column="film_cats" jdbcType="VARCHAR" property="filmCats" />
    <result column="film_area" jdbcType="INTEGER" property="filmArea" />
    <result column="film_date" jdbcType="INTEGER" property="filmDate" />
    <result column="film_time" jdbcType="TIMESTAMP" property="filmTime" />
    <result column="film_status" jdbcType="INTEGER" property="filmStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    UUID, film_name, film_type, img_address, film_score, film_preSaleNum, film_box_office, 
    film_source, film_cats, film_area, film_date, film_time, film_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mooc_film_t
    where UUID = #{uuid,jdbcType=INTEGER}
  </select>
  <select id="describeFilms" resultType="com.clf.meetingfilm.backendfilm.vo.DescribeFilmsRespVO">
    SELECT
      film.`UUID` AS  filmId,
      film.`film_status` AS filmStatus,
      info.`film_en_name` AS filmEnName,
      film.`film_score` AS filmScore,
      film.`film_name` AS filmName,
      film.`film_preSaleNum` AS preSaleNum,
      film.`film_box_office` AS boxOffice,
      film.`film_time` AS filmTime,
      info.`film_length` AS filmLength,
      film.`img_address` AS mainImg
    FROM mooc_film_t film
    LEFT JOIN mooc_film_info_t info ON film.`UUID` = info.`film_id`
  </select>
  <select id="describeFilmById" resultType="com.clf.meetingfilm.backendapi.film.vo.DescribeFilmRespVO">
    SELECT
      film.`UUID` AS filmId,
      film.`film_name` AS filmName,
      info.`film_length` AS filmLength,
      (SELECT
        GROUP_CONCAT(show_name SEPARATOR ',')
        FROM mooc_cat_dict_t cat
        WHERE FIND_IN_SET (
         cat.`UUID`,(
           SELECT
             REPLACE(TRIM(BOTH '#' FROM film.film_cats),"#",",")
           FROM mooc_film_t f
           WHERE f.uuid = film.`uuid`
         )
        )) AS filmCats,
      (SELECT GROUP_CONCAT(role_name SEPARATOR ',')
        FROM mooc_film_actor_t actor WHERE actor.film_id = film.uuid) AS actors,
      film.`img_address` AS imgAddress,
      info.`film_imgs` AS subAddress
    FROM mooc_film_t film
    LEFT JOIN mooc_film_info_t info
    ON film.`UUID` = info.`film_id`
    where film.`uuid` = #{filmId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mooc_film_t
    where UUID = #{uuid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="UUID" keyProperty="uuid" parameterType="com.clf.meetingfilm.backendfilm.model.MoocFilmT" useGeneratedKeys="true">
    insert into mooc_film_t (film_name, film_type, img_address, 
      film_score, film_preSaleNum, film_box_office, 
      film_source, film_cats, film_area, 
      film_date, film_time, film_status
      )
    values (#{filmName,jdbcType=VARCHAR}, #{filmType,jdbcType=INTEGER}, #{imgAddress,jdbcType=VARCHAR}, 
      #{filmScore,jdbcType=VARCHAR}, #{filmPresalenum,jdbcType=INTEGER}, #{filmBoxOffice,jdbcType=INTEGER}, 
      #{filmSource,jdbcType=INTEGER}, #{filmCats,jdbcType=VARCHAR}, #{filmArea,jdbcType=INTEGER}, 
      #{filmDate,jdbcType=INTEGER}, #{filmTime,jdbcType=TIMESTAMP}, #{filmStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="UUID" keyProperty="uuid" parameterType="com.clf.meetingfilm.backendfilm.model.MoocFilmT" useGeneratedKeys="true">
    insert into mooc_film_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="filmName != null">
        film_name,
      </if>
      <if test="filmType != null">
        film_type,
      </if>
      <if test="imgAddress != null">
        img_address,
      </if>
      <if test="filmScore != null">
        film_score,
      </if>
      <if test="filmPresalenum != null">
        film_preSaleNum,
      </if>
      <if test="filmBoxOffice != null">
        film_box_office,
      </if>
      <if test="filmSource != null">
        film_source,
      </if>
      <if test="filmCats != null">
        film_cats,
      </if>
      <if test="filmArea != null">
        film_area,
      </if>
      <if test="filmDate != null">
        film_date,
      </if>
      <if test="filmTime != null">
        film_time,
      </if>
      <if test="filmStatus != null">
        film_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="filmName != null">
        #{filmName,jdbcType=VARCHAR},
      </if>
      <if test="filmType != null">
        #{filmType,jdbcType=INTEGER},
      </if>
      <if test="imgAddress != null">
        #{imgAddress,jdbcType=VARCHAR},
      </if>
      <if test="filmScore != null">
        #{filmScore,jdbcType=VARCHAR},
      </if>
      <if test="filmPresalenum != null">
        #{filmPresalenum,jdbcType=INTEGER},
      </if>
      <if test="filmBoxOffice != null">
        #{filmBoxOffice,jdbcType=INTEGER},
      </if>
      <if test="filmSource != null">
        #{filmSource,jdbcType=INTEGER},
      </if>
      <if test="filmCats != null">
        #{filmCats,jdbcType=VARCHAR},
      </if>
      <if test="filmArea != null">
        #{filmArea,jdbcType=INTEGER},
      </if>
      <if test="filmDate != null">
        #{filmDate,jdbcType=INTEGER},
      </if>
      <if test="filmTime != null">
        #{filmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filmStatus != null">
        #{filmStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.clf.meetingfilm.backendfilm.model.MoocFilmT">
    update mooc_film_t
    <set>
      <if test="filmName != null">
        film_name = #{filmName,jdbcType=VARCHAR},
      </if>
      <if test="filmType != null">
        film_type = #{filmType,jdbcType=INTEGER},
      </if>
      <if test="imgAddress != null">
        img_address = #{imgAddress,jdbcType=VARCHAR},
      </if>
      <if test="filmScore != null">
        film_score = #{filmScore,jdbcType=VARCHAR},
      </if>
      <if test="filmPresalenum != null">
        film_preSaleNum = #{filmPresalenum,jdbcType=INTEGER},
      </if>
      <if test="filmBoxOffice != null">
        film_box_office = #{filmBoxOffice,jdbcType=INTEGER},
      </if>
      <if test="filmSource != null">
        film_source = #{filmSource,jdbcType=INTEGER},
      </if>
      <if test="filmCats != null">
        film_cats = #{filmCats,jdbcType=VARCHAR},
      </if>
      <if test="filmArea != null">
        film_area = #{filmArea,jdbcType=INTEGER},
      </if>
      <if test="filmDate != null">
        film_date = #{filmDate,jdbcType=INTEGER},
      </if>
      <if test="filmTime != null">
        film_time = #{filmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filmStatus != null">
        film_status = #{filmStatus,jdbcType=INTEGER},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clf.meetingfilm.backendfilm.model.MoocFilmT">
    update mooc_film_t
    set film_name = #{filmName,jdbcType=VARCHAR},
      film_type = #{filmType,jdbcType=INTEGER},
      img_address = #{imgAddress,jdbcType=VARCHAR},
      film_score = #{filmScore,jdbcType=VARCHAR},
      film_preSaleNum = #{filmPresalenum,jdbcType=INTEGER},
      film_box_office = #{filmBoxOffice,jdbcType=INTEGER},
      film_source = #{filmSource,jdbcType=INTEGER},
      film_cats = #{filmCats,jdbcType=VARCHAR},
      film_area = #{filmArea,jdbcType=INTEGER},
      film_date = #{filmDate,jdbcType=INTEGER},
      film_time = #{filmTime,jdbcType=TIMESTAMP},
      film_status = #{filmStatus,jdbcType=INTEGER}
    where UUID = #{uuid,jdbcType=INTEGER}
  </update>
</mapper>